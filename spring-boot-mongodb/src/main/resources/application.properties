# Connection with TLS
spring.data.mongodb.uri=mongodb://userDB:passwordDB@sample-cluster.node.sa-east-1.docdb.amazonaws.com:27017/nameDB?ssl=true&replicaSet=rs0&readpreference=secondaryPreferred
# When TLS is enabled is necessary use these JVM arguments:
# -Djavax.net.ssl.trustStore=C:\\cert\\rds-ca-certs -Djavax.net.ssl.trustStorePassword=password
# Instructions to generate the rds-ca-certs file:
# This example only worked using rds-ca-2019-root.pem instead of rds-combined-ca-bundle.pem. Download it here:
# https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem
# After downloading you should run this:
# keytool -importcert -trustcacerts -file rds-ca-2019-root.pem -alias rds19 -keystore rds-ca-certs -storepass keyStorePassword

# Connection without TLS
#spring.data.mongodb.uri=mongodb://userDB:passwordDB@sample-cluster.node.sa-east-1.docdb.amazonaws.com:27017/nameDB?replicaSet=rs0&readpreference=secondaryPreferred

# Alternative configuration
#spring.data.mongodb.host=sample-cluster.node.sa-east-1.docdb.amazonaws.com
#spring.data.mongodb.port=27017
#spring.data.mongodb.authentication-database=nameDB
#spring.data.mongodb.username=userDB
#spring.data.mongodb.password=passwordDB
#spring.data.mongodb.database=nameDB